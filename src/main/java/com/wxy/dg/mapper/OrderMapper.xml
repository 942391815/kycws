<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.wxy.dg.common.model.Order">

    <resultMap id="order" type="com.wxy.dg.common.model.Order">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="price" column="price"/>
        <result property="discountPrice" column="discount_price"/>
        <result property="describe" column="describe"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="count" column="count"/>
        <result property="orderType" column="order_type"/>

    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        <![CDATA[

		id,`name`,price,discount_price,`describe`,yn,create_time,update_time,count,order_type

        ]]>
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[

        INSERT INTO `order` (
        	id,`name`,price,discount_price,`describe`,yn,create_time,update_time,count,order_type
        ) VALUES (
        	#{id} ,
        	#{name} ,
        	#{price} ,
        	#{discountPrice} ,
        	#{describe},
        	#{yn},
        	#{createTime},
        	#{updateTime},
        	#{count},
        	#{orderType}
        )

        ]]>
    </insert>

    <sql id="update_sql">
        <set>
            <if test="name != null and name !=''">
                name = #{name},
            </if>
            <if test="price != null and price !=''">
                price = #{price},
            </if>
            <if test="discountPrice != null">
                discount_price = #{discountPrice},
            </if>
            <if test="describe != null">
                `describe` = #{describe},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime},
            </if>
            <if test="count != null">
                `count` = #{count},
            </if>
            <if test="yn != null">
                yn = #{yn},
            </if>
            <if test="orderType != null">
                order_type = #{orderType}
            </if>
        </set>
    </sql>

    <update id="update">
        UPDATE `order`
        <include refid="update_sql"/>
        WHERE
        ID = #{id}
    </update>

    <sql id="findPage_where">
        <where>
            1 = 1
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name !=''">
                and name = #{name}
            </if>
            <if test="price != null and price !=''">
                and price = #{price}
            </if>
            <if test="discountPrice != null and discountPrice!=''">
                and discount_price = #{discountPrice}
            </if>
            <if test="describe != null and describe!=''">
                and describe = #{describe}
            </if>
            <if test="yn != null and yn!=''">
                and yn = #{yn}
            </if>
            <if test="createTime != null">
                and `create_time` = #{createTime}
            </if>
            <if test="updateTime != null">
                and `update_time` = #{updateTime}
            </if>
            <if test="count != null">
                and `count` = #{count}
            </if>
            <if test="orderType != null">
                and `order_type` = #{orderType}
            </if>
        </where>
    </sql>

    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM `order`
        <include refid="findPage_where"/>
    </select>

    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="order">
        SELECT
        <include refid="columns"/>
        FROM `order`
        <include refid="findPage_where"/>

        <if test="sortColumns != null and sortColumns !=''">
            ORDER BY ${sortColumns}
        </if>
    </select>

    <select id="getById" resultMap="order">
        SELECT
        <include refid="columns"/>
        <![CDATA[
		    FROM `order`
	        WHERE
		        ID = #{id}
	    ]]>
    </select>

    <select id="getOrderByOpenId" parameterType="Map" resultType="Map">
        select * from `consumer_order` a join `order` b on a.`order_id`=b.`id`  where a.`openId`=#{openId}
    </select>
</mapper>
